{"version":3,"file":"static/js/658.137195a1.chunk.js","mappings":"qQACA,EAA6B,gCAA7B,EAAsE,4BAAtE,EAA0G,2B,SCyB1G,EAtByB,SAAC,GAAgB,IAAfA,EAAc,EAAdA,SACvB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OACI,kBAAMC,UAAWC,EAAmBL,SAPjB,SAACM,GACpBA,EAAMC,iBACNP,EAASE,GACTC,EAAU,KAIV,WACI,kBAAOC,UAAWC,EAAcG,KAAK,SAASC,KAAK,OAAOC,MAAOR,EAAQS,SAb3D,SAACL,GACnB,IAAOI,EAASJ,EAAMM,OAAfF,MACPP,EAAUO,IAW4FG,UAAQ,EAACC,YAAY,mBACvH,mBAAQV,UAAWC,EAAeI,KAAK,eCpBnD,EAA0B,oCAA1B,EAAqE,iCAArE,EAA6G,iCAA7G,EAAwJ,oCAAxJ,EAAwM,sCCoCxM,EAjCyB,SAAC,GAA0B,IAAxBM,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC5BC,EAAaF,EAAOG,KAAI,SAAAC,GAAK,aACjC,eAAIf,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAae,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMP,GAAvE,UACE,4BACE,gBACEZ,UAAWC,EACXmB,IAAKL,EAAMM,YAAN,yCAAsDN,EAAMM,aAAgB,gCACjFC,IAAI,MAEN,iCAAIP,EAAMQ,aAAV,QAAmBR,EAAMX,aAREW,EAAME,OAczC,OACE,gBAAKjB,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SAAgCY,OCkBtC,EAlCqB,WACnB,OAAwBhB,EAAAA,EAAAA,UAAS,IAAjC,eAAO2B,EAAP,KAAaC,EAAb,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,SAE/BlB,GAAWmB,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKH,EAAL,CAGA,IAAMI,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAkBL,GAF5B,gBAERM,EAFQ,EAERA,QACRV,EAAQU,GAHQ,yGAAH,qDAOjBF,OACC,CAACJ,IAIJ,OACE,iCACE,SAAC,EAAD,CAAkBjC,SAJD,SAAAwC,GAAK,OAAIR,EAAgB,CAAEQ,MAAAA,EAAOC,KAAM,OAKxDR,GAAeS,QAAQd,EAAKe,UAAW,SAAC,EAAD,CAAkB5B,OAAQa,EAAMZ,SAAUA,IACjFiB,IAAgBS,QAAQd,EAAKe,UAAW,oFAAeV,EAAf,uGCzB/C,EARmB,WACf,OACI,+BACA,SAAC,EAAD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesSearch/MoviesSearchForm/search-form.module.css?6140","components/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesSearch/MoviesSearchList/movies-search-list.module.css?4793","components/MoviesSearch/MoviesSearchList/MoviesSearchList.jsx","components/MoviesSearch/MoviesSearch.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"search-form_searchForm__Fo5El\",\"button\":\"search-form_button__Uoeep\",\"input\":\"search-form_input__1AuXt\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from './search-form.module.css'\n\nconst MoviesSearchForm = ({onSubmit}) => {\n    const [search, setSearch] = useState('')\n\n    const getInputValue = (event) => {\n        const {value} = event.target;\n        setSearch(value)\n    }\n    \n      const handleSubmit = (event) => {\n        event.preventDefault();\n        onSubmit(search);\n        setSearch('')\n    }\n\n    return (\n        <form className={styles.searchForm} onSubmit={handleSubmit}>\n            <input className={styles.input} name=\"search\" type=\"text\" value={search} onChange={getInputValue} required placeholder=\"Search movies\"/>\n            <button className={styles.button} type=\"submit\"></button>\n        </form>\n    )\n}\n\nexport default MoviesSearchForm;\n\nMoviesSearchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"movies-search-list_section__9YW53\",\"item\":\"movies-search-list_item__EvUQV\",\"link\":\"movies-search-list_link__wFJXU\",\"gallery\":\"movies-search-list_gallery__AsSE5\",\"itemImage\":\"movies-search-list_itemImage__UxU4S\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styles from './movies-search-list.module.css';\n\nconst MoviesSearchList = ({ movies, location }) => {\n  const moviesList = movies.map(movie => (\n    <li className={styles.item} key={movie.id}>\n      <Link className={styles.link} to={`/movies/${movie.id}`} state={{from: location}}>\n        <div>\n          <img\n            className={styles.itemImage}\n            src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://picsum.photos/200/300'}\n            alt=\"\"\n          />\n          <p>{movie.title ?? movie.name}</p>\n        </div>\n      </Link>\n    </li>\n  ));\n\n  return (\n    <div className={styles.section}>\n      <ul className={styles.gallery}>{moviesList}</ul>\n    </div>\n  );\n};\n\nMoviesSearchList.propTypes = {\n    movies: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        poster_path: PropTypes.string,\n        title: PropTypes.string,\n        name: PropTypes.string,\n    })).isRequired,\n    location: PropTypes.object.isRequired\n}\n\nexport default MoviesSearchList;\n\n\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getMoviesBySearch } from '../../shared/services/movies';\nimport MoviesSearchForm from './MoviesSearchForm';\nimport MoviesSearchList from './MoviesSearchList';\n\nconst MoviesSearch = () => {\n  const [data, setData] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  const location = useLocation()\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return\n    }\n    const fetchMovies = async () => {\n      try {\n        const { results } = await getMoviesBySearch(searchQuery);\n        setData(results);\n      } catch (err) {}\n    };\n\n    fetchMovies();\n  }, [searchQuery]);\n\n  const handleSubmit = query => setSearchParams({ query, page: 1 });\n\n  return (\n    <>\n      <MoviesSearchForm onSubmit={handleSubmit} />\n      {searchQuery && Boolean(data.length) && <MoviesSearchList movies={data} location={location}/>}\n      {searchQuery && !Boolean(data.length) && <p>По запросу {searchQuery} ничего не найдено</p>}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","import MoviesSearch from \"../../components/MoviesSearch\";\n\nconst MoviesPage = () => {\n    return(\n        <>\n        <MoviesSearch />\n        </>\n    )\n}\n\nexport default MoviesPage;"],"names":["onSubmit","useState","search","setSearch","className","styles","event","preventDefault","name","type","value","onChange","target","required","placeholder","movies","location","moviesList","map","movie","to","id","state","from","src","poster_path","alt","title","data","setData","useSearchParams","searchParams","setSearchParams","searchQuery","get","useLocation","useEffect","fetchMovies","getMoviesBySearch","results","query","page","Boolean","length"],"sourceRoot":""}