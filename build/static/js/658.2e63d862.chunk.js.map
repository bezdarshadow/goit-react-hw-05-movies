{"version":3,"file":"static/js/658.2e63d862.chunk.js","mappings":"qQACA,EAA6B,gCAA7B,EAAsE,4BAAtE,EAA0G,2B,SCyB1G,EAtByB,SAAC,GAAgB,IAAfA,EAAc,EAAdA,SACvB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OACI,kBAAMC,UAAWC,EAAmBL,SAPjB,SAACM,GACpBA,EAAMC,iBACNP,EAASE,GACTC,EAAU,KAIV,WACI,kBAAOC,UAAWC,EAAcG,KAAK,SAASC,KAAK,OAAOC,MAAOR,EAAQS,SAb3D,SAACL,GACnB,IAAOI,EAASJ,EAAMM,OAAfF,MACPP,EAAUO,IAW4FG,UAAQ,EAACC,YAAY,mBACvH,mBAAQV,UAAWC,EAAeI,KAAK,eCpBnD,EAA0B,oCAA1B,EAAqE,iCAArE,EAA6G,iCAA7G,EAAwJ,oCAAxJ,EAAwM,sCCoCxM,EAjCyB,SAAC,GAA0B,IAAxBM,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC5BC,EAAaF,EAAOG,KAAI,SAAAC,GAAK,aACjC,eAAIf,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAae,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAMP,GAAvE,UACE,4BACE,gBACEZ,UAAWC,EACXmB,IAAKL,EAAMM,YAAN,yCAAsDN,EAAMM,aAAgB,gCACjFC,IAAI,MAEN,iCAAIP,EAAMQ,aAAV,QAAmBR,EAAMX,aAREW,EAAME,OAczC,OACE,gBAAKjB,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SAAgCY,OCkBtC,EAlCqB,WACnB,OAAwBhB,EAAAA,EAAAA,UAAS,IAAjC,eAAO2B,EAAP,KAAaC,EAAb,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,SAE/BlB,GAAWmB,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKH,EAAL,CAGA,IAAMI,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAkBL,GAF5B,gBAERM,EAFQ,EAERA,QACRV,EAAQU,GAHQ,yGAAH,qDAOjBF,OACC,CAACJ,IAIJ,OACE,iCACE,SAAC,EAAD,CAAkBjC,SAJD,SAAAwC,GAAK,OAAIR,EAAgB,CAAEQ,MAAAA,EAAOC,KAAM,OAKxDR,GAAeS,QAAQd,EAAKe,UAAW,SAAC,EAAD,CAAkB5B,OAAQa,EAAMZ,SAAUA,IACjFiB,IAAgBS,QAAQd,EAAKe,UAAW,oFAAeV,EAAf,uGCzB/C,EARmB,WACf,OACI,+BACA,SAAC,EAAD","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesSearch/MoviesSearchForm/search-form.module.css?6140","components/MoviesSearch/MoviesSearchForm/MoviesSearchForm.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesSearch/MoviesSearchList/movies-search-list.module.css?4793","components/MoviesSearch/MoviesSearchList/MoviesSearchList.jsx","components/MoviesSearch/MoviesSearch.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"search-form_searchForm__eBYHD\",\"button\":\"search-form_button__WdqrP\",\"input\":\"search-form_input__vwyGK\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './search-form.module.css'\r\n\r\nconst MoviesSearchForm = ({onSubmit}) => {\r\n    const [search, setSearch] = useState('')\r\n\r\n    const getInputValue = (event) => {\r\n        const {value} = event.target;\r\n        setSearch(value)\r\n    }\r\n    \r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        onSubmit(search);\r\n        setSearch('')\r\n    }\r\n\r\n    return (\r\n        <form className={styles.searchForm} onSubmit={handleSubmit}>\r\n            <input className={styles.input} name=\"search\" type=\"text\" value={search} onChange={getInputValue} required placeholder=\"Search movies\"/>\r\n            <button className={styles.button} type=\"submit\"></button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MoviesSearchForm;\r\n\r\nMoviesSearchForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"movies-search-list_section__+Oscn\",\"item\":\"movies-search-list_item__SBlO4\",\"link\":\"movies-search-list_link__fxcaF\",\"gallery\":\"movies-search-list_gallery__JPVKt\",\"itemImage\":\"movies-search-list_itemImage__ub1Sd\"};","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './movies-search-list.module.css';\r\n\r\nconst MoviesSearchList = ({ movies, location }) => {\r\n  const moviesList = movies.map(movie => (\r\n    <li className={styles.item} key={movie.id}>\r\n      <Link className={styles.link} to={`/movies/${movie.id}`} state={{from: location}}>\r\n        <div>\r\n          <img\r\n            className={styles.itemImage}\r\n            src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : 'https://picsum.photos/200/300'}\r\n            alt=\"\"\r\n          />\r\n          <p>{movie.title ?? movie.name}</p>\r\n        </div>\r\n      </Link>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className={styles.section}>\r\n      <ul className={styles.gallery}>{moviesList}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoviesSearchList.propTypes = {\r\n    movies: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        poster_path: PropTypes.string,\r\n        title: PropTypes.string,\r\n        name: PropTypes.string,\r\n    })).isRequired,\r\n    location: PropTypes.object.isRequired\r\n}\r\n\r\nexport default MoviesSearchList;\r\n\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport { useSearchParams, useLocation } from 'react-router-dom';\r\nimport { getMoviesBySearch } from '../../shared/services/movies';\r\nimport MoviesSearchForm from './MoviesSearchForm';\r\nimport MoviesSearchList from './MoviesSearchList';\r\n\r\nconst MoviesSearch = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const searchQuery = searchParams.get('query');\r\n\r\n  const location = useLocation()\r\n\r\n  useEffect(() => {\r\n    if (!searchQuery) {\r\n      return\r\n    }\r\n    const fetchMovies = async () => {\r\n      try {\r\n        const { results } = await getMoviesBySearch(searchQuery);\r\n        setData(results);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchMovies();\r\n  }, [searchQuery]);\r\n\r\n  const handleSubmit = query => setSearchParams({ query, page: 1 });\r\n\r\n  return (\r\n    <>\r\n      <MoviesSearchForm onSubmit={handleSubmit} />\r\n      {searchQuery && Boolean(data.length) && <MoviesSearchList movies={data} location={location}/>}\r\n      {searchQuery && !Boolean(data.length) && <p>По запросу {searchQuery} ничего не найдено</p>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesSearch;\r\n","import MoviesSearch from \"../../components/MoviesSearch\";\r\n\r\nconst MoviesPage = () => {\r\n    return(\r\n        <>\r\n        <MoviesSearch />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MoviesPage;"],"names":["onSubmit","useState","search","setSearch","className","styles","event","preventDefault","name","type","value","onChange","target","required","placeholder","movies","location","moviesList","map","movie","to","id","state","from","src","poster_path","alt","title","data","setData","useSearchParams","searchParams","setSearchParams","searchQuery","get","useLocation","useEffect","fetchMovies","getMoviesBySearch","results","query","page","Boolean","length"],"sourceRoot":""}